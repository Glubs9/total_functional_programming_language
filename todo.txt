1. *fix type checker*


4. see if you can get that logic programming idea sorted
5. check destroy doesn't exist in any primitive function
7. more semantics checking stuff
	a. check that data constructors are unique
	b. check that data constructors do not embed themselves
	c. check arities of functions and constructors
8. optimize semantics checker so it only runs analysis once and uses that analysi sa whole bunch
	a. maybe, think about it later.
	b also maybe integrate the semantics checker and the executor.
9. see if we can write the semantics checker to only allow construction of objects from correct
types.
	a. like we do data list = cons[a,list] | end;
	b. means that you have to have a list type in the second half.
	c. this would be very good and kind of important to do.
	d. althoguh it would require finding the rturn types of functions


10. more complex type inference
	a. like a simplified hindley milner without polymorphism.
	b. like we can look at the argumnet functions' types nd build an inference search aroudn
	that.
	c. although that's a little odd and we would have to re-write the type checker it's a nifty idea.

12. add file loading?
13. add strings? (or a character type)

15. add check to make sure only one type is used in each function

16. check functions are called with right brackts

17. update repl to allow history and stuff
	a. might require a package maybe?
